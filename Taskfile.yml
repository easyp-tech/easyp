version: '3'

vars:
  LINTER_VERSION: "1.57.2"
  GOTESTSUM_VERSION: "1.11.0"
  LOCAL_BIN: "{{.USER_WORKING_DIR}}/bin"
  MOCKERY_VERSION: "v2.41.0"

tasks:

  install_linters:
    cmds:
      - "curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b {{.LOCAL_BIN}} v{{.LINTER_VERSION}}"

  install_gotestsum:
    cmds:
      - "GOBIN={{.LOCAL_BIN}} go install gotest.tools/gotestsum@v{{.GOTESTSUM_VERSION}}"

  install_mockery:
    cmds:
      - "GOBIN={{.LOCAL_BIN}} go install github.com/vektra/mockery/v2@{{.MOCKERY_VERSION}}"

  init:
    deps:
      - install_linters
      - install_gotestsum
      - install_mockery
    cmds:
      - "go get -v ./..."

  build:
    cmds:
      - "go build -o easyp ./cmd/easyp"

  test:
    cmds:
      - "{{.LOCAL_BIN}}/gotestsum --format pkgname -- -coverprofile=coverage.out -race -count=1 ./..."

  lint:
    deps:
      - build
    cmds:
      - "{{.LOCAL_BIN}}/golangci-lint run ./..."

  quality:
    deps:
      - test
      - lint

  coverage:
    cmds:
      - "go tool cover -html=coverage.out"

  install:
    cmds:
      - "go install ./cmd/easyp"

  clean:
    cmds:
      - "rm -rf ./bin"
      - "rm -rf ./coverage.out"
      - "go clean -cache"

  mock:
    cmds:
      - "{{.LOCAL_BIN}}/mockery --name {{.NAME}} --dir {{.DIR}} --output {{.DIR}}/mocks"

  mocks:
    cmds:
      - task: mock
        vars: { NAME: 'LockFile', DIR: './internal/mod/adapters/storage' }

      - task: mock
        vars: {NAME: 'Mod', DIR: './internal/api/shared/module_reflect'}
      - task: mock
        vars: {NAME: 'Storage', DIR: './internal/api/shared/module_reflect'}
      - task: mock
        vars: {NAME: 'LockFile', DIR: './internal/api/shared/module_reflect'}
