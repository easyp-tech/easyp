// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: currency/v1/currency.proto

package currencypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Contains currency code.
type Code int32

const (
	// For unknown value.
	// Can't be anyway.
	Code_CODE_UNSPECIFIED Code = 0
	// UAE dirham.
	Code_CODE_AED Code = 1
	// Afghan afghani.
	Code_CODE_AFN Code = 2
	// Albanian lek.
	Code_CODE_ALL Code = 3
	// Armenian dram.
	Code_CODE_AMD Code = 4
	// Netherlands Antillean gulden.
	Code_CODE_ANG Code = 5
	// Angolan kwanza.
	Code_CODE_AOA Code = 6
	// Argentine peso.
	Code_CODE_ARS Code = 7
	// Australian dollar.
	Code_CODE_AUD Code = 8
	// Aruban florin.
	Code_CODE_AWG Code = 9
	// Azerbaijani manat.
	Code_CODE_AZN Code = 10
	// Bosnia and Herzegovina konvertibilna marka.
	Code_CODE_BAM Code = 11
	// Barbadian dollar.
	Code_CODE_BBD Code = 12
	// Bangladeshi taka.
	Code_CODE_BDT Code = 13
	// Bulgarian lev.
	Code_CODE_BGN Code = 14
	// Bahraini dinar.
	Code_CODE_BHD Code = 15
	// Burundi franc.
	Code_CODE_BIF Code = 16
	// Bermudian dollar.
	Code_CODE_BMD Code = 17
	// Brunei dollar.
	Code_CODE_BND Code = 18
	// Bolivian boliviano.
	Code_CODE_BOB Code = 19
	// Brazilian real.
	Code_CODE_BRL Code = 20
	// Bahamian dollar.
	Code_CODE_BSD Code = 21
	// Bhutanese ngultrum.
	Code_CODE_BTN Code = 22
	// Botswana pula.
	Code_CODE_BWP Code = 23
	// Belarusian ruble.
	Code_CODE_BYR Code = 24
	// Belize dollar.
	Code_CODE_BZD Code = 25
	// Canadian dollar.
	Code_CODE_CAD Code = 26
	// Congolese franc.
	Code_CODE_CDF Code = 27
	// Swiss franc.
	Code_CODE_CHF Code = 28
	// Chilean peso.
	Code_CODE_CLP Code = 29
	// Chinese/Yuan renminbi.
	Code_CODE_CNY Code = 30
	// Colombian peso.
	Code_CODE_COP Code = 31
	// Costa Rican colon.
	Code_CODE_CRC Code = 32
	// Cuban peso.
	Code_CODE_CUC Code = 33
	// Cape Verdean escudo.
	Code_CODE_CVE Code = 34
	// Czech koruna.
	Code_CODE_CZK Code = 35
	// Djiboutian franc.
	Code_CODE_DJF Code = 36
	// Danish krone.
	Code_CODE_DKK Code = 37
	// Dominican peso.
	Code_CODE_DOP Code = 38
	// Algerian dinar.
	Code_CODE_DZD Code = 39
	// Estonian kroon.
	Code_CODE_EEK Code = 40
	// Egyptian pound.
	Code_CODE_EGP Code = 41
	// Eritrean nakfa.
	Code_CODE_ERN Code = 42
	// Ethiopian birr.
	Code_CODE_ETB Code = 43
	// European Euro.
	Code_CODE_EUR Code = 44
	// Fijian dollar.
	Code_CODE_FJD Code = 45
	// Falkland Islands pound.
	Code_CODE_FKP Code = 46
	// British pound.
	Code_CODE_GBP Code = 47
	// Georgian lari.
	Code_CODE_GEL Code = 48
	// Ghanaian cedi.
	Code_CODE_GHS Code = 49
	// Gibraltar pound.
	Code_CODE_GIP Code = 50
	// Gambian dalasi.
	Code_CODE_GMD Code = 51
	// Guinean franc.
	Code_CODE_GNF Code = 52
	// Central African CFA franc.
	Code_CODE_GQE Code = 53
	// Guatemalan quetzal.
	Code_CODE_GTQ Code = 54
	// Guyanese dollar.
	Code_CODE_GYD Code = 55
	// Hong Kong dollar.
	Code_CODE_HKD Code = 56
	// Honduran lempira.
	Code_CODE_HNL Code = 57
	// Croatian kuna.
	Code_CODE_HRK Code = 58
	// Haitian gourde.
	Code_CODE_HTG Code = 59
	// Hungarian forint.
	Code_CODE_HUF Code = 60
	// Indonesian rupiah.
	Code_CODE_IDR Code = 61
	// Israeli new sheqel.
	Code_CODE_ILS Code = 62
	// Indian rupee.
	Code_CODE_INR Code = 63
	// Iraqi dinar.
	Code_CODE_IQD Code = 64
	// Iranian rial.
	Code_CODE_IRR Code = 65
	// Icelandic króna.
	Code_CODE_ISK Code = 66
	// Jamaican dollar.
	Code_CODE_JMD Code = 67
	// Jordanian dinar.
	Code_CODE_JOD Code = 68
	// Japanese yen.
	Code_CODE_JPY Code = 69
	// Kenyan shilling.
	Code_CODE_KES Code = 70
	// Kyrgyzstani som.
	Code_CODE_KGS Code = 71
	// Cambodian riel.
	Code_CODE_KHR Code = 72
	// Comorian franc.
	Code_CODE_KMF Code = 73
	// North Korean won.
	Code_CODE_KPW Code = 74
	// South Korean won.
	Code_CODE_KRW Code = 75
	// Kuwaiti dinar.
	Code_CODE_KWD Code = 76
	// Cayman Islands dollar.
	Code_CODE_KYD Code = 77
	// Kazakhstani tenge.
	Code_CODE_KZT Code = 78
	// Lao kip.
	Code_CODE_LAK Code = 79
	// Lebanese lira.
	Code_CODE_LBP Code = 80
	// Sri Lankan rupee.
	Code_CODE_LKR Code = 81
	// Liberian dollar.
	Code_CODE_LRD Code = 82
	// Lesotho loti.
	Code_CODE_LSL Code = 83
	// Lithuanian litas.
	Code_CODE_LTL Code = 84
	// Latvian lats.
	Code_CODE_LVL Code = 85
	// Libyan dinar.
	Code_CODE_LYD Code = 86
	// Moroccan dirham.
	Code_CODE_MAD Code = 87
	// Moldovan leu.
	Code_CODE_MDL Code = 88
	// Malagasy ariary.
	Code_CODE_MGA Code = 89
	// Macedonian denar.
	Code_CODE_MKD Code = 90
	// Myanma kyat.
	Code_CODE_MMK Code = 91
	// Mongolian tugrik.
	Code_CODE_MNT Code = 92
	// Macanese pataca.
	Code_CODE_MOP Code = 93
	// Mauritanian ouguiya.
	Code_CODE_MRO Code = 94
	// Mauritian rupee.
	Code_CODE_MUR Code = 95
	// Maldivian rufiyaa.
	Code_CODE_MVR Code = 96
	// Malawian kwacha.
	Code_CODE_MWK Code = 97
	// Mexican peso.
	Code_CODE_MXN Code = 98
	// Malaysian ringgit.
	Code_CODE_MYR Code = 99
	// Mozambican metical.
	Code_CODE_MZM Code = 100
	// Namibian dollar.
	Code_CODE_NAD Code = 101
	// Nigerian naira.
	Code_CODE_NGN Code = 102
	// Nicaraguan córdoba.
	Code_CODE_NIO Code = 103
	// Norwegian krone.
	Code_CODE_NOK Code = 104
	// Nepalese rupee.
	Code_CODE_NPR Code = 105
	// New Zealand dollar.
	Code_CODE_NZD Code = 106
	// Omani rial.
	Code_CODE_OMR Code = 107
	// Panamanian balboa.
	Code_CODE_PAB Code = 108
	// Peruvian nuevo sol.
	Code_CODE_PEN Code = 109
	// Papua New Guinean kina.
	Code_CODE_PGK Code = 110
	// Philippine peso.
	Code_CODE_PHP Code = 111
	// Pakistani rupee.
	Code_CODE_PKR Code = 112
	// Polish zloty.
	Code_CODE_PLN Code = 113
	// Paraguayan guarani.
	Code_CODE_PYG Code = 114
	// Qatari riyal.
	Code_CODE_QAR Code = 115
	// Romanian leu.
	Code_CODE_RON Code = 116
	// Serbian dinar.
	Code_CODE_RSD Code = 117
	// Russian ruble.
	Code_CODE_RUB Code = 118
	// Saudi riyal.
	Code_CODE_SAR Code = 119
	// Solomon Islands dollar.
	Code_CODE_SBD Code = 120
	// Seychellois rupee.
	Code_CODE_SCR Code = 121
	// Sudanese pound.
	Code_CODE_SDG Code = 122
	// Swedish krona.
	Code_CODE_SEK Code = 123
	// Singapore dollar.
	Code_CODE_SGD Code = 124
	// Saint Helena pound.
	Code_CODE_SHP Code = 125
	// Sierra Leonean leone.
	Code_CODE_SLL Code = 126
	// Somali shilling.
	Code_CODE_SOS Code = 127
	// Surinamese dollar.
	Code_CODE_SRD Code = 128
	// Syrian pound.
	Code_CODE_SYP Code = 129
	// Swazi lilangeni.
	Code_CODE_SZL Code = 130
	// Thai baht.
	Code_CODE_THB Code = 131
	// Tajikistani somoni.
	Code_CODE_TJS Code = 132
	// Turkmen manat.
	Code_CODE_TMT Code = 133
	// Tunisian dinar.
	Code_CODE_TND Code = 134
	// Turkish new lira.
	Code_CODE_TRY Code = 135
	// Trinidad and Tobago dollar.
	Code_CODE_TTD Code = 136
	// New Taiwan dollar.
	Code_CODE_TWD Code = 137
	// Tanzanian shilling.
	Code_CODE_TZS Code = 138
	// Ukrainian hryvnia.
	Code_CODE_UAH Code = 139
	// Ugandan shilling.
	Code_CODE_UGX Code = 140
	// United States dollar.
	Code_CODE_USD Code = 141
	// Uruguayan peso.
	Code_CODE_UYU Code = 142
	// Uzbekistani som.
	Code_CODE_UZS Code = 143
	// Venezuelan bolivar.
	Code_CODE_VEB Code = 144
	// Vietnamese dong.
	Code_CODE_VND Code = 145
	// Vanuatu vatu.
	Code_CODE_VUV Code = 146
	// Samoan tala.
	Code_CODE_WST Code = 147
	// Central African CFA franc.
	Code_CODE_XAF Code = 148
	// East Caribbean dollar.
	Code_CODE_XCD Code = 149
	// Special Drawing Rights.
	Code_CODE_XDR Code = 150
	// West African CFA franc.
	Code_CODE_XOF Code = 151
	// CFP franc.
	Code_CODE_XPF Code = 152
	// Yemeni rial.
	Code_CODE_YER Code = 153
	// South African rand.
	Code_CODE_ZAR Code = 154
	// Zambian kwacha.
	Code_CODE_ZMK Code = 155
	// Zimbabwean dollar.
	Code_CODE_ZWR Code = 156
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:   "CODE_UNSPECIFIED",
		1:   "CODE_AED",
		2:   "CODE_AFN",
		3:   "CODE_ALL",
		4:   "CODE_AMD",
		5:   "CODE_ANG",
		6:   "CODE_AOA",
		7:   "CODE_ARS",
		8:   "CODE_AUD",
		9:   "CODE_AWG",
		10:  "CODE_AZN",
		11:  "CODE_BAM",
		12:  "CODE_BBD",
		13:  "CODE_BDT",
		14:  "CODE_BGN",
		15:  "CODE_BHD",
		16:  "CODE_BIF",
		17:  "CODE_BMD",
		18:  "CODE_BND",
		19:  "CODE_BOB",
		20:  "CODE_BRL",
		21:  "CODE_BSD",
		22:  "CODE_BTN",
		23:  "CODE_BWP",
		24:  "CODE_BYR",
		25:  "CODE_BZD",
		26:  "CODE_CAD",
		27:  "CODE_CDF",
		28:  "CODE_CHF",
		29:  "CODE_CLP",
		30:  "CODE_CNY",
		31:  "CODE_COP",
		32:  "CODE_CRC",
		33:  "CODE_CUC",
		34:  "CODE_CVE",
		35:  "CODE_CZK",
		36:  "CODE_DJF",
		37:  "CODE_DKK",
		38:  "CODE_DOP",
		39:  "CODE_DZD",
		40:  "CODE_EEK",
		41:  "CODE_EGP",
		42:  "CODE_ERN",
		43:  "CODE_ETB",
		44:  "CODE_EUR",
		45:  "CODE_FJD",
		46:  "CODE_FKP",
		47:  "CODE_GBP",
		48:  "CODE_GEL",
		49:  "CODE_GHS",
		50:  "CODE_GIP",
		51:  "CODE_GMD",
		52:  "CODE_GNF",
		53:  "CODE_GQE",
		54:  "CODE_GTQ",
		55:  "CODE_GYD",
		56:  "CODE_HKD",
		57:  "CODE_HNL",
		58:  "CODE_HRK",
		59:  "CODE_HTG",
		60:  "CODE_HUF",
		61:  "CODE_IDR",
		62:  "CODE_ILS",
		63:  "CODE_INR",
		64:  "CODE_IQD",
		65:  "CODE_IRR",
		66:  "CODE_ISK",
		67:  "CODE_JMD",
		68:  "CODE_JOD",
		69:  "CODE_JPY",
		70:  "CODE_KES",
		71:  "CODE_KGS",
		72:  "CODE_KHR",
		73:  "CODE_KMF",
		74:  "CODE_KPW",
		75:  "CODE_KRW",
		76:  "CODE_KWD",
		77:  "CODE_KYD",
		78:  "CODE_KZT",
		79:  "CODE_LAK",
		80:  "CODE_LBP",
		81:  "CODE_LKR",
		82:  "CODE_LRD",
		83:  "CODE_LSL",
		84:  "CODE_LTL",
		85:  "CODE_LVL",
		86:  "CODE_LYD",
		87:  "CODE_MAD",
		88:  "CODE_MDL",
		89:  "CODE_MGA",
		90:  "CODE_MKD",
		91:  "CODE_MMK",
		92:  "CODE_MNT",
		93:  "CODE_MOP",
		94:  "CODE_MRO",
		95:  "CODE_MUR",
		96:  "CODE_MVR",
		97:  "CODE_MWK",
		98:  "CODE_MXN",
		99:  "CODE_MYR",
		100: "CODE_MZM",
		101: "CODE_NAD",
		102: "CODE_NGN",
		103: "CODE_NIO",
		104: "CODE_NOK",
		105: "CODE_NPR",
		106: "CODE_NZD",
		107: "CODE_OMR",
		108: "CODE_PAB",
		109: "CODE_PEN",
		110: "CODE_PGK",
		111: "CODE_PHP",
		112: "CODE_PKR",
		113: "CODE_PLN",
		114: "CODE_PYG",
		115: "CODE_QAR",
		116: "CODE_RON",
		117: "CODE_RSD",
		118: "CODE_RUB",
		119: "CODE_SAR",
		120: "CODE_SBD",
		121: "CODE_SCR",
		122: "CODE_SDG",
		123: "CODE_SEK",
		124: "CODE_SGD",
		125: "CODE_SHP",
		126: "CODE_SLL",
		127: "CODE_SOS",
		128: "CODE_SRD",
		129: "CODE_SYP",
		130: "CODE_SZL",
		131: "CODE_THB",
		132: "CODE_TJS",
		133: "CODE_TMT",
		134: "CODE_TND",
		135: "CODE_TRY",
		136: "CODE_TTD",
		137: "CODE_TWD",
		138: "CODE_TZS",
		139: "CODE_UAH",
		140: "CODE_UGX",
		141: "CODE_USD",
		142: "CODE_UYU",
		143: "CODE_UZS",
		144: "CODE_VEB",
		145: "CODE_VND",
		146: "CODE_VUV",
		147: "CODE_WST",
		148: "CODE_XAF",
		149: "CODE_XCD",
		150: "CODE_XDR",
		151: "CODE_XOF",
		152: "CODE_XPF",
		153: "CODE_YER",
		154: "CODE_ZAR",
		155: "CODE_ZMK",
		156: "CODE_ZWR",
	}
	Code_value = map[string]int32{
		"CODE_UNSPECIFIED": 0,
		"CODE_AED":         1,
		"CODE_AFN":         2,
		"CODE_ALL":         3,
		"CODE_AMD":         4,
		"CODE_ANG":         5,
		"CODE_AOA":         6,
		"CODE_ARS":         7,
		"CODE_AUD":         8,
		"CODE_AWG":         9,
		"CODE_AZN":         10,
		"CODE_BAM":         11,
		"CODE_BBD":         12,
		"CODE_BDT":         13,
		"CODE_BGN":         14,
		"CODE_BHD":         15,
		"CODE_BIF":         16,
		"CODE_BMD":         17,
		"CODE_BND":         18,
		"CODE_BOB":         19,
		"CODE_BRL":         20,
		"CODE_BSD":         21,
		"CODE_BTN":         22,
		"CODE_BWP":         23,
		"CODE_BYR":         24,
		"CODE_BZD":         25,
		"CODE_CAD":         26,
		"CODE_CDF":         27,
		"CODE_CHF":         28,
		"CODE_CLP":         29,
		"CODE_CNY":         30,
		"CODE_COP":         31,
		"CODE_CRC":         32,
		"CODE_CUC":         33,
		"CODE_CVE":         34,
		"CODE_CZK":         35,
		"CODE_DJF":         36,
		"CODE_DKK":         37,
		"CODE_DOP":         38,
		"CODE_DZD":         39,
		"CODE_EEK":         40,
		"CODE_EGP":         41,
		"CODE_ERN":         42,
		"CODE_ETB":         43,
		"CODE_EUR":         44,
		"CODE_FJD":         45,
		"CODE_FKP":         46,
		"CODE_GBP":         47,
		"CODE_GEL":         48,
		"CODE_GHS":         49,
		"CODE_GIP":         50,
		"CODE_GMD":         51,
		"CODE_GNF":         52,
		"CODE_GQE":         53,
		"CODE_GTQ":         54,
		"CODE_GYD":         55,
		"CODE_HKD":         56,
		"CODE_HNL":         57,
		"CODE_HRK":         58,
		"CODE_HTG":         59,
		"CODE_HUF":         60,
		"CODE_IDR":         61,
		"CODE_ILS":         62,
		"CODE_INR":         63,
		"CODE_IQD":         64,
		"CODE_IRR":         65,
		"CODE_ISK":         66,
		"CODE_JMD":         67,
		"CODE_JOD":         68,
		"CODE_JPY":         69,
		"CODE_KES":         70,
		"CODE_KGS":         71,
		"CODE_KHR":         72,
		"CODE_KMF":         73,
		"CODE_KPW":         74,
		"CODE_KRW":         75,
		"CODE_KWD":         76,
		"CODE_KYD":         77,
		"CODE_KZT":         78,
		"CODE_LAK":         79,
		"CODE_LBP":         80,
		"CODE_LKR":         81,
		"CODE_LRD":         82,
		"CODE_LSL":         83,
		"CODE_LTL":         84,
		"CODE_LVL":         85,
		"CODE_LYD":         86,
		"CODE_MAD":         87,
		"CODE_MDL":         88,
		"CODE_MGA":         89,
		"CODE_MKD":         90,
		"CODE_MMK":         91,
		"CODE_MNT":         92,
		"CODE_MOP":         93,
		"CODE_MRO":         94,
		"CODE_MUR":         95,
		"CODE_MVR":         96,
		"CODE_MWK":         97,
		"CODE_MXN":         98,
		"CODE_MYR":         99,
		"CODE_MZM":         100,
		"CODE_NAD":         101,
		"CODE_NGN":         102,
		"CODE_NIO":         103,
		"CODE_NOK":         104,
		"CODE_NPR":         105,
		"CODE_NZD":         106,
		"CODE_OMR":         107,
		"CODE_PAB":         108,
		"CODE_PEN":         109,
		"CODE_PGK":         110,
		"CODE_PHP":         111,
		"CODE_PKR":         112,
		"CODE_PLN":         113,
		"CODE_PYG":         114,
		"CODE_QAR":         115,
		"CODE_RON":         116,
		"CODE_RSD":         117,
		"CODE_RUB":         118,
		"CODE_SAR":         119,
		"CODE_SBD":         120,
		"CODE_SCR":         121,
		"CODE_SDG":         122,
		"CODE_SEK":         123,
		"CODE_SGD":         124,
		"CODE_SHP":         125,
		"CODE_SLL":         126,
		"CODE_SOS":         127,
		"CODE_SRD":         128,
		"CODE_SYP":         129,
		"CODE_SZL":         130,
		"CODE_THB":         131,
		"CODE_TJS":         132,
		"CODE_TMT":         133,
		"CODE_TND":         134,
		"CODE_TRY":         135,
		"CODE_TTD":         136,
		"CODE_TWD":         137,
		"CODE_TZS":         138,
		"CODE_UAH":         139,
		"CODE_UGX":         140,
		"CODE_USD":         141,
		"CODE_UYU":         142,
		"CODE_UZS":         143,
		"CODE_VEB":         144,
		"CODE_VND":         145,
		"CODE_VUV":         146,
		"CODE_WST":         147,
		"CODE_XAF":         148,
		"CODE_XCD":         149,
		"CODE_XDR":         150,
		"CODE_XOF":         151,
		"CODE_XPF":         152,
		"CODE_YER":         153,
		"CODE_ZAR":         154,
		"CODE_ZMK":         155,
		"CODE_ZWR":         156,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_currency_v1_currency_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_currency_v1_currency_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_currency_v1_currency_proto_rawDescGZIP(), []int{0}
}

var File_currency_v1_currency_proto protoreflect.FileDescriptor

var file_currency_v1_currency_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2a, 0xc1, 0x11, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x46, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4d, 0x44, 0x10, 0x04,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x4f, 0x41, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x52, 0x53, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x41, 0x57, 0x47, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41,
	0x5a, 0x4e, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x41, 0x4d,
	0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x42, 0x44, 0x10, 0x0c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x44, 0x54, 0x10, 0x0d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x47, 0x4e, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x48, 0x44, 0x10, 0x0f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x42, 0x49, 0x46, 0x10, 0x10, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x42, 0x4d, 0x44, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42,
	0x4e, 0x44, 0x10, 0x12, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x4f, 0x42,
	0x10, 0x13, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x52, 0x4c, 0x10, 0x14,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x53, 0x44, 0x10, 0x15, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x54, 0x4e, 0x10, 0x16, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x57, 0x50, 0x10, 0x17, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x42, 0x59, 0x52, 0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x42, 0x5a, 0x44, 0x10, 0x19, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43,
	0x41, 0x44, 0x10, 0x1a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x44, 0x46,
	0x10, 0x1b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x48, 0x46, 0x10, 0x1c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4c, 0x50, 0x10, 0x1d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4e, 0x59, 0x10, 0x1e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x50, 0x10, 0x1f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x43, 0x52, 0x43, 0x10, 0x20, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x43, 0x55, 0x43, 0x10, 0x21, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43,
	0x56, 0x45, 0x10, 0x22, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x5a, 0x4b,
	0x10, 0x23, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4a, 0x46, 0x10, 0x24,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4b, 0x4b, 0x10, 0x25, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f, 0x50, 0x10, 0x26, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x5a, 0x44, 0x10, 0x27, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x45, 0x45, 0x4b, 0x10, 0x28, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x45, 0x47, 0x50, 0x10, 0x29, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45,
	0x52, 0x4e, 0x10, 0x2a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x54, 0x42,
	0x10, 0x2b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x55, 0x52, 0x10, 0x2c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x4a, 0x44, 0x10, 0x2d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x4b, 0x50, 0x10, 0x2e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x42, 0x50, 0x10, 0x2f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x47, 0x45, 0x4c, 0x10, 0x30, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x47, 0x48, 0x53, 0x10, 0x31, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47,
	0x49, 0x50, 0x10, 0x32, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x4d, 0x44,
	0x10, 0x33, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x4e, 0x46, 0x10, 0x34,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x51, 0x45, 0x10, 0x35, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x54, 0x51, 0x10, 0x36, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x59, 0x44, 0x10, 0x37, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x48, 0x4b, 0x44, 0x10, 0x38, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x48, 0x4e, 0x4c, 0x10, 0x39, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48,
	0x52, 0x4b, 0x10, 0x3a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x54, 0x47,
	0x10, 0x3b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x55, 0x46, 0x10, 0x3c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x44, 0x52, 0x10, 0x3d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4c, 0x53, 0x10, 0x3e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x52, 0x10, 0x3f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x49, 0x51, 0x44, 0x10, 0x40, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x49, 0x52, 0x52, 0x10, 0x41, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49,
	0x53, 0x4b, 0x10, 0x42, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x4d, 0x44,
	0x10, 0x43, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x4f, 0x44, 0x10, 0x44,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4a, 0x50, 0x59, 0x10, 0x45, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x45, 0x53, 0x10, 0x46, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x47, 0x53, 0x10, 0x47, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4b, 0x48, 0x52, 0x10, 0x48, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4b, 0x4d, 0x46, 0x10, 0x49, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b,
	0x50, 0x57, 0x10, 0x4a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x52, 0x57,
	0x10, 0x4b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x57, 0x44, 0x10, 0x4c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x59, 0x44, 0x10, 0x4d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4b, 0x5a, 0x54, 0x10, 0x4e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x41, 0x4b, 0x10, 0x4f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4c, 0x42, 0x50, 0x10, 0x50, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4c, 0x4b, 0x52, 0x10, 0x51, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c,
	0x52, 0x44, 0x10, 0x52, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x53, 0x4c,
	0x10, 0x53, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x54, 0x4c, 0x10, 0x54,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x56, 0x4c, 0x10, 0x55, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x59, 0x44, 0x10, 0x56, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x41, 0x44, 0x10, 0x57, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4d, 0x44, 0x4c, 0x10, 0x58, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4d, 0x47, 0x41, 0x10, 0x59, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d,
	0x4b, 0x44, 0x10, 0x5a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x4d, 0x4b,
	0x10, 0x5b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x4e, 0x54, 0x10, 0x5c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x4f, 0x50, 0x10, 0x5d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x52, 0x4f, 0x10, 0x5e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x55, 0x52, 0x10, 0x5f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4d, 0x56, 0x52, 0x10, 0x60, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4d, 0x57, 0x4b, 0x10, 0x61, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d,
	0x58, 0x4e, 0x10, 0x62, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x59, 0x52,
	0x10, 0x63, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x5a, 0x4d, 0x10, 0x64,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x41, 0x44, 0x10, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x47, 0x4e, 0x10, 0x66, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x49, 0x4f, 0x10, 0x67, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4b, 0x10, 0x68, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4e, 0x50, 0x52, 0x10, 0x69, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x5a, 0x44, 0x10, 0x6a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4d, 0x52,
	0x10, 0x6b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x42, 0x10, 0x6c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x10, 0x6d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x47, 0x4b, 0x10, 0x6e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x48, 0x50, 0x10, 0x6f, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x50, 0x4b, 0x52, 0x10, 0x70, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x50, 0x4c, 0x4e, 0x10, 0x71, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50,
	0x59, 0x47, 0x10, 0x72, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x51, 0x41, 0x52,
	0x10, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x4f, 0x4e, 0x10, 0x74,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x44, 0x10, 0x75, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x55, 0x42, 0x10, 0x76, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x41, 0x52, 0x10, 0x77, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x53, 0x42, 0x44, 0x10, 0x78, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x43, 0x52, 0x10, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53,
	0x44, 0x47, 0x10, 0x7a, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x4b,
	0x10, 0x7b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x47, 0x44, 0x10, 0x7c,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x48, 0x50, 0x10, 0x7d, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4c, 0x4c, 0x10, 0x7e, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4f, 0x53, 0x10, 0x7f, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x53, 0x52, 0x44, 0x10, 0x80, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x53, 0x59, 0x50, 0x10, 0x81, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x53, 0x5a, 0x4c, 0x10, 0x82, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x54, 0x48, 0x42, 0x10, 0x83, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54,
	0x4a, 0x53, 0x10, 0x84, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4d,
	0x54, 0x10, 0x85, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x4e, 0x44,
	0x10, 0x86, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x52, 0x59, 0x10,
	0x87, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x54, 0x44, 0x10, 0x88,
	0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x57, 0x44, 0x10, 0x89, 0x01,
	0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x5a, 0x53, 0x10, 0x8a, 0x01, 0x12,
	0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x41, 0x48, 0x10, 0x8b, 0x01, 0x12, 0x0d,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x47, 0x58, 0x10, 0x8c, 0x01, 0x12, 0x0d, 0x0a,
	0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x53, 0x44, 0x10, 0x8d, 0x01, 0x12, 0x0d, 0x0a, 0x08,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x59, 0x55, 0x10, 0x8e, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x55, 0x5a, 0x53, 0x10, 0x8f, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x56, 0x45, 0x42, 0x10, 0x90, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x56, 0x4e, 0x44, 0x10, 0x91, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x56, 0x55, 0x56, 0x10, 0x92, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x57, 0x53, 0x54, 0x10, 0x93, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x58,
	0x41, 0x46, 0x10, 0x94, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x58, 0x43,
	0x44, 0x10, 0x95, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x58, 0x44, 0x52,
	0x10, 0x96, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x58, 0x4f, 0x46, 0x10,
	0x97, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x58, 0x50, 0x46, 0x10, 0x98,
	0x01, 0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x59, 0x45, 0x52, 0x10, 0x99, 0x01,
	0x12, 0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x5a, 0x41, 0x52, 0x10, 0x9a, 0x01, 0x12,
	0x0d, 0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x5a, 0x4d, 0x4b, 0x10, 0x9b, 0x01, 0x12, 0x0d,
	0x0a, 0x08, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x5a, 0x57, 0x52, 0x10, 0x9c, 0x01, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x69, 0x70, 0x6b,
	0x69, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_currency_v1_currency_proto_rawDescOnce sync.Once
	file_currency_v1_currency_proto_rawDescData = file_currency_v1_currency_proto_rawDesc
)

func file_currency_v1_currency_proto_rawDescGZIP() []byte {
	file_currency_v1_currency_proto_rawDescOnce.Do(func() {
		file_currency_v1_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_currency_v1_currency_proto_rawDescData)
	})
	return file_currency_v1_currency_proto_rawDescData
}

var file_currency_v1_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_currency_v1_currency_proto_goTypes = []any{
	(Code)(0), // 0: currency.v1.Code
}
var file_currency_v1_currency_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_currency_v1_currency_proto_init() }
func file_currency_v1_currency_proto_init() {
	if File_currency_v1_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_currency_v1_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_currency_v1_currency_proto_goTypes,
		DependencyIndexes: file_currency_v1_currency_proto_depIdxs,
		EnumInfos:         file_currency_v1_currency_proto_enumTypes,
	}.Build()
	File_currency_v1_currency_proto = out.File
	file_currency_v1_currency_proto_rawDesc = nil
	file_currency_v1_currency_proto_goTypes = nil
	file_currency_v1_currency_proto_depIdxs = nil
}
